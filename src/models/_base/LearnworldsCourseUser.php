<?php
/**
 * @package dzlab\learnworlds\src\models\_base
 */

namespace dzlab\learnworlds\models\_base;

use dz\db\ActiveRecord;
use dz\db\DbCriteria;
use dz\helpers\DateHelper;
use dz\helpers\StringHelper;
use user\models\User;
use Yii;

/**
 * DO NOT MODIFY THIS FILE! It is automatically generated by Gii.
 * If any changes are necessary, you must set or override the required
 * property or method in class "dzlab\learnworlds\src\models\LearnworldsCourseUser".
 *
 * This is the model base class for the table "learnworlds_course_user".
 * Columns in table "learnworlds_course_user" available as properties of the model,
 * and there are no model relations.
 *
 * -------------------------------------------------------------------------
 * COLUMN FIELDS
 * -------------------------------------------------------------------------
 * @property string $learnworlds_course_id
 * @property string $learnworlds_user_id
 * @property integer $user_id
 * @property integer $created_date
 * @property integer $created_uid
 *
 * -------------------------------------------------------------------------
 * RELATIONS
 * -------------------------------------------------------------------------
 */
abstract class LearnworldsCourseUser extends ActiveRecord
{
	/**
	 * Constructor
	 */
	public static function model($className=__CLASS__)
	{
		return parent::model($className);
	}


	/**
	 * Returns the name of the associated database table
	 */
	public function tableName()
	{
		return 'learnworlds_course_user';
	}


	/**
	 * Label with translation support (from GIIX)
	 */
	public static function label($n = 1)
	{
		return Yii::t('app', 'LearnworldsCourseUser|LearnworldsCourseUsers', $n);
	}


    /**
     * Returns the validation rules for attributes
     */
    public function rules()
    {
        return [
            ['learnworlds_course_id, learnworlds_user_id, user_id, created_date, created_uid', 'required'],
            ['user_id, created_date, created_uid', 'numerical', 'integerOnly' => true],
            ['learnworlds_course_id', 'length', 'max'=> 255],
            ['learnworlds_user_id', 'length', 'max'=> 32],
            ['learnworlds_course_id, learnworlds_user_id, user_id, created_date, created_uid', 'safe', 'on' => 'search'],
        ];
    }


    /**
     * Define relations with other objects
     *
     * There are four types of relations that may exist between two active record objects:
     *   - BELONGS_TO: e.g. a member belongs to a team;
     *   - HAS_ONE: e.g. a member has at most one profile;
     *   - HAS_MANY: e.g. a team has many members;
     *   - MANY_MANY: e.g. a member has many skills and a skill belongs to a member.
     */
    public function relations()
    {
        return [
        ];
    }


    /**
     * Returns the attribute labels
     */
    public function attributeLabels()
    {
        return [
            'learnworlds_course_id' => null,
            'learnworlds_user_id' => null,
            'user_id' => null,
            'created_date' => Yii::t('app', 'Created Date'),
            'created_uid' => null,
        ];
    }


    /**
     * LearnworldsCourseUser models list
     * 
     * @return array
     */
    public function learnworldscourseuser_list($list_id = '')
    {
        $vec_output = [];

        $criteria = new DbCriteria;
        $criteria->select = ['learnworlds_course_id', 'learnworlds_course_id', 'learnworlds_user_id'];
        // $criteria->order = 't.id ASC';
        // $criteria->condition = '';
        
        $vec_models = LearnworldsCourseUser::model()->findAll($criteria);
        if ( !empty($vec_models) )
        {
            foreach ( $vec_models as $que_model )
            {
                $vec_output[$que_model->getAttribute('learnworlds_course_id')] = $que_model->title();
            }
        }

        return $vec_output;
    }


	/**
	 * Generate an ActiveDataProvider for search form of this model
	 *
	 * Used in CGridView
	 */
	public function search()
	{
		$criteria = new DbCriteria;
        
        $criteria->with = [];
        // $criteria->together = true;

		$criteria->compare('t.created_date', $this->created_date);

		return new \CActiveDataProvider($this, [
			'criteria' => $criteria,
			'pagination' => ['pageSize' => 30],
			'sort' => ['defaultOrder' => ['learnworlds_course_id' => true]]
		]);
	}
	
	
	/**
	 * Returns fields not showed in create/update forms
	 */
	public function excludedFormFields()
	{
		return [
			'created_date' => true, 
			'created_uid' => true, 
		];
	}


    /**
     * Automatic string representation for a model (from GIIX)
     */
    public static function representingColumn()
    {
        return [
            'learnworlds_course_id',
            'learnworlds_user_id',
        ];
    }


    /**
     * Title used for this model
     */
    public function title()
    {
        return $this->learnworlds_course_id .' - '. $this->learnworlds_user_id;
    }
}
